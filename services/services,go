package services

import (
	converter "proovit-/converter"
)

func listAllTransactions(c *gin.Context) ([]models.Transaction, error) { 
	var transactions []models.Transaction
 
	if err := db.Find(&transactions).Error; err != nil {
	   return nil, err
	}
 
	return transactions, nil
 }

 func accountBalance(c *gin.Context) (sumInBTC, sumInEur, error) { 
	var transactions []models.Transaction

	if err := db.Debug().Model(&models.Transaction{}).Find(&transactions, models.Transaction{Spent: false}).Error; err != nil {
		return 0,0, err
	 }

	 var sumInBTC, sumInEur float64
 
	 for _, transaction := range transactions {
		sumInBTC += transaction.Amount
	}

	sumInEur = converter.convertBTCToEUR(sumInBTC)
	if err != nil {
		log.Println(err)
		return 0,0, err
	}

	// v√µiks olla isegi structina vms

	return sumInBTC, sumInEur, nil
 }

func newTransfer(c *gin.Context)  (sumInBTC, sumInEur, error) { 
	
}